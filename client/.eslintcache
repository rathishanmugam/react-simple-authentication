[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/home.js":"4","/app/src/login.js":"5","/app/src/Nav.js":"6","/app/src/signup.js":"7","/app/src/auth-service.js":"8","/app/src/APICalls.js":"9","/app/src/PageLoader/PageLoader.js":"10","/app/src/rxjs/fform.js":"11","/app/src/rxjs/useForm.js":"12","/app/src/rxjs/useFFetch.js":"13"},{"size":553,"mtime":1608233809707,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1606944049090,"results":"16","hashOfConfig":"15"},{"size":5855,"mtime":1608960577827,"results":"17","hashOfConfig":"15"},{"size":556,"mtime":1608516220755,"results":"18","hashOfConfig":"15"},{"size":4143,"mtime":1608960993582,"results":"19","hashOfConfig":"15"},{"size":2317,"mtime":1608961162383,"results":"20","hashOfConfig":"15"},{"size":4797,"mtime":1608520247588,"results":"21","hashOfConfig":"15"},{"size":245,"mtime":1608501511898,"results":"22","hashOfConfig":"15"},{"size":3024,"mtime":1608960942231,"results":"23","hashOfConfig":"15"},{"size":267,"mtime":1601607655998,"results":"24","hashOfConfig":"15"},{"size":957,"mtime":1608841921774,"results":"25","hashOfConfig":"15"},{"size":290,"mtime":1608565453984,"results":"26","hashOfConfig":"15"},{"size":625,"mtime":1608611866178,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1qsoct1",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/app/src/index.js",["58"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["59","60"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",["61","62","63","64","65","66"],"/app/src/home.js",["67","68","69","70","71","72","73","74","75"],"import React,{Component} from 'react';\nimport {signout} from \"./APICalls\";\nimport PropTypes from 'prop-types';\nimport {BrowserRouter as Router, Route ,Switch , Redirect} from \"react-router-dom\";\n\nexport default function Home({ userName,logoutDone }) {\nconsole.log('I am in home -user name is ====>',userName);\n        return (\n            <div>\n                <h1> Home </h1>\n                <span  >{`Welcome ${userName}`}</span>\n                <button className=\"signup\" onClick={() => logoutDone() }>Sign-out</button>\n            </div>\n        );\n}\n\n","/app/src/login.js",[],"/app/src/Nav.js",["76","77","78","79","80","81","82","83","84","85"],"/app/src/signup.js",["86","87"],"import React, { useState } from \"react\";\nimport Home from \"./home\";\nimport { signup } from './APICalls'\nimport {Redirect} from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n\nconst STATUS = {\n    IDLE: \"IDLE\",\n    SUBMITTED: \"SUBMITTED\",\n    SUBMITTING: \"SUBMITTING\",\n    COMPLETED: \"COMPLETED\",\n};\n\n// Declaring outside component to avoid recreation on each render\nconst emptyLogin = {\n    name: '',\n    email: \"\",\n    password: \"\",\n};\n\nexport default function Signup({ backToLogin, signupDone }) {\n    const [login, setLogin] = useState(emptyLogin);\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const [saveError, setSaveError] = useState(null);\n    const [touched, setTouched] = useState({});\n    const history = useHistory();\n    // Derived state\n    const errors = getErrors(login);\n    const isValid = Object.keys(errors).length === 0;\n\n    function handleChange(e) {\n        e.persist(); // persist the event\n        setLogin((curLogin) => {\n            return {\n                ...curLogin,\n                [e.target.id]: e.target.value,\n            };\n        });\n    }\n\n    function handleBlur(event) {\n        event.persist();\n        setTouched((cur) => {\n            return { ...cur, [event.target.id]: true };\n        });\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setStatus(STATUS.SUBMITTING);\n        if (isValid) {\n            try {\n               const  user = await signup(login.name,login.email,login.password);\n                setStatus(STATUS.COMPLETED);\n                 signupDone();\n                 // history.push(\"/login\");\n\n            } catch (e) {\n                setSaveError(e);\n            }\n        } else {\n            setStatus(STATUS.SUBMITTED);\n        }\n    }\n\n    function getErrors(login) {\n        const result = {};\n        if (!login.name) result.name = \"Name is required\";\n\n        if (!login.email) result.email = \"Email is required\";\n        if (!login.password) result.password = \"Password is required\";\n        return result;\n    }\n\n    if (saveError) throw saveError;\n    if (status === STATUS.COMPLETED) {\n        return <Home/>;\n    }\n\n    return (\n        <>\n            <h1>Sign Up Form</h1>\n            {!isValid && status === STATUS.SUBMITTED && (\n                <div role=\"alert\">\n                    <p>Please fix the following errors:</p>\n                    <ul>\n                        {Object.keys(errors).map((key) => {\n                            return <li key={key}>{errors[key]}</li>;\n                        })}\n                    </ul>\n                </div>\n            )}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <br />\n                    <input\n                        id=\"name\"\n                        type=\"text\"\n                        value={login.name}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                    />\n                    <p role=\"alert\">\n                        {(touched.name || status === STATUS.SUBMITTED) && errors.name}\n                    </p>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <br />\n                    <input\n                        id=\"email\"\n                        type=\"text\"\n                        value={login.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                    />\n                    <p role=\"alert\">\n                        {(touched.email || status === STATUS.SUBMITTED) && errors.email}\n                    </p>\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <br />\n                    <input\n                        id=\"password\"\n                        value={login.password}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                    />\n                    <p role=\"alert\">\n                        {(touched.password || status === STATUS.SUBMITTED) && errors.password}\n                    </p>\n                </div>\n\n                <div>\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        value=\"Save signup\"\n                        disabled={status === STATUS.SUBMITTING}\n                    />\n                </div>\n                {/*<button className=\"login-link\" onClick={() =>history.push(\"/login\")}>Sign-in</button>*/}\n\n                <button className=\"login-link\" onClick={() => { backToLogin() }}>Sign-in</button>\n            </form>\n        </>\n    );\n}\n","/app/src/auth-service.js",[],"/app/src/APICalls.js",[],"/app/src/PageLoader/PageLoader.js",[],"/app/src/rxjs/fform.js",[],"/app/src/rxjs/useForm.js",[],"/app/src/rxjs/useFFetch.js",[],{"ruleId":"88","severity":1,"message":"89","line":6,"column":34,"nodeType":"90","messageId":"91","endLine":6,"endColumn":39},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"88","severity":1,"message":"96","line":53,"column":8,"nodeType":"90","messageId":"91","endLine":53,"endColumn":18},{"ruleId":"88","severity":1,"message":"97","line":60,"column":26,"nodeType":"90","messageId":"91","endLine":60,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":60,"column":34,"nodeType":"90","messageId":"91","endLine":60,"endColumn":39},{"ruleId":"88","severity":1,"message":"98","line":60,"column":41,"nodeType":"90","messageId":"91","endLine":60,"endColumn":47},{"ruleId":"88","severity":1,"message":"99","line":61,"column":9,"nodeType":"90","messageId":"91","endLine":61,"endColumn":20},{"ruleId":"88","severity":1,"message":"100","line":62,"column":9,"nodeType":"90","messageId":"91","endLine":62,"endColumn":13},{"ruleId":"88","severity":1,"message":"101","line":1,"column":15,"nodeType":"90","messageId":"91","endLine":1,"endColumn":24},{"ruleId":"88","severity":1,"message":"102","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":17},{"ruleId":"88","severity":1,"message":"97","line":4,"column":26,"nodeType":"90","messageId":"91","endLine":4,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":4,"column":34,"nodeType":"90","messageId":"91","endLine":4,"endColumn":39},{"ruleId":"88","severity":1,"message":"98","line":4,"column":41,"nodeType":"90","messageId":"91","endLine":4,"endColumn":47},{"ruleId":"88","severity":1,"message":"103","line":4,"column":50,"nodeType":"90","messageId":"91","endLine":4,"endColumn":58},{"ruleId":"88","severity":1,"message":"104","line":7,"column":9,"nodeType":"90","messageId":"91","endLine":7,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":13,"column":35,"nodeType":"90","messageId":"107","endLine":13,"endColumn":50},{"ruleId":"108","severity":1,"message":"109","line":15,"column":15,"nodeType":"110","endLine":15,"endColumn":24},{"ruleId":"88","severity":1,"message":"111","line":2,"column":9,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"112","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":13},{"ruleId":"88","severity":1,"message":"113","line":4,"column":9,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"114","line":4,"column":18,"nodeType":"90","messageId":"91","endLine":4,"endColumn":24},{"ruleId":"88","severity":1,"message":"97","line":5,"column":26,"nodeType":"90","messageId":"91","endLine":5,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":5,"column":34,"nodeType":"90","messageId":"91","endLine":5,"endColumn":39},{"ruleId":"88","severity":1,"message":"98","line":5,"column":41,"nodeType":"90","messageId":"91","endLine":5,"endColumn":47},{"ruleId":"88","severity":1,"message":"103","line":5,"column":50,"nodeType":"90","messageId":"91","endLine":5,"endColumn":58},{"ruleId":"88","severity":1,"message":"115","line":22,"column":16,"nodeType":"90","messageId":"91","endLine":22,"endColumn":21},{"ruleId":"88","severity":1,"message":"116","line":22,"column":23,"nodeType":"90","messageId":"91","endLine":22,"endColumn":33},{"ruleId":"88","severity":1,"message":"103","line":4,"column":9,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"117","line":53,"column":23,"nodeType":"90","messageId":"91","endLine":53,"endColumn":27},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'PageLoader' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'AuthService' is defined but never used.","'Form' is defined but never used.","'Component' is defined but never used.","'PropTypes' is defined but never used.","'Redirect' is defined but never used.","'isAuthenticated' is assigned a value but never used.","no-self-assign","'isAuthenticated' is assigned to itself.","selfAssignment","react-hooks/exhaustive-deps","Assignments to the 'user' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Link' is defined but never used.","'Login' is defined but never used.","'signout' is defined but never used.","'signup' is defined but never used.","'state' is assigned a value but never used.","'logoutDone' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]